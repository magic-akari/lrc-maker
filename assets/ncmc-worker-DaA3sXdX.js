(function(){"use strict";const i=self,A=Uint8Array.of(104,122,72,82,65,109,115,111,53,107,73,110,98,97,120,87),g=async(f,y)=>{const l={name:"AES-CBC",iv:new Uint8Array(16)},s=await crypto.subtle.importKey("raw",f,"AES-CBC",!1,["encrypt","decrypt"]),n=y.byteLength-16,u=y.slice(n),d=await crypto.subtle.decrypt(l,s,u),a=new Uint8Array(n+d.byteLength);a.set(new Uint8Array(d),n);const e=new Uint8Array(16);e.fill(16);const c=new Uint8Array(32);for(let t=0;t<n;t+=16){const r=y.slice(t,t+16),o=await crypto.subtle.encrypt({name:"AES-CBC",iv:r},s,e);c.set(r,0),c.set(new Uint8Array(o).slice(0,16),16);const p=await crypto.subtle.decrypt({name:"AES-CBC",iv:new ArrayBuffer(16)},s,c);a.set(new Uint8Array(p),t)}return a};i.addEventListener("message",async f=>{const y=f.data,l=new FileReaderSync().readAsArrayBuffer(y),s=new DataView(l);(s.getUint32(0,!0)!==1313166403||s.getUint32(4,!0)!==1296122950)&&(i.postMessage({type:"error",payload:"not ncm file"}),i.close());let n=10;const u=(await(()=>{const e=s.getUint32(n,!0);n+=4;const c=new Uint8Array(l,n,e).map(t=>t^100);return n+=e,g(A,c)})()).slice(17),d=(()=>{const e=new Uint8Array(Array(256).keys()),c=u.length;let t=0;for(let r=0;r<256;r++)t=e[r]+t+u[r%c]&255,[e[r],e[t]]=[e[t],e[r]];return e.map((r,o,p)=>{o=o+1&255;const w=p[o],U=p[o+w&255];return p[w+U&255]})})();n+=s.getUint32(n,!0)+4,n+=s.getUint32(n+5,!0)+13;const a=(()=>{const e=new Uint8Array(l,n),c=e.length;for(let t=0;t<c;++t)e[t]^=d[t&255];return e})();i.postMessage({type:"success",payload:a},[a.buffer]),i.close()})})();
